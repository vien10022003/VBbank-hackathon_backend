package com.vbbankhackathon.backend.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configurers.AbstractHttpConfigurer;
import org.springframework.security.web.SecurityFilterChain;
import org.springframework.web.cors.CorsConfiguration;
import org.springframework.web.cors.CorsConfigurationSource;
import org.springframework.web.cors.UrlBasedCorsConfigurationSource;

import java.util.Arrays;

@Configuration
@EnableWebSecurity
public class SecurityConfig {

    @Bean
    public SecurityFilterChain filterChain(HttpSecurity http) throws Exception {
        http
            // Tắt CSRF protection
            .csrf(AbstractHttpConfigurer::disable)
            
            // Cho phép tất cả các request mà không cần authentication
            .authorizeHttpRequests(auth -> auth
                .anyRequest().permitAll()
            )
            
            // Cấu hình CORS
            .cors(cors -> cors.configurationSource(corsConfigurationSource()));
            
        return http.build();
    }

    @Bean
    public CorsConfigurationSource corsConfigurationSource() {
        CorsConfiguration configuration = new CorsConfiguration();
        
        // Cho phép tất cả các origin
        configuration.setAllowedOriginPatterns(Arrays.asList("*"));
        
        // Cho phép tất cả các method HTTP
        configuration.setAllowedMethods(Arrays.asList("GET", "POST", "PUT", "DELETE", "OPTIONS", "HEAD", "PATCH"));
        
        // Cho phép tất cả các header
        configuration.setAllowedHeaders(Arrays.asList("*"));
        
        // Cho phép credentials
        configuration.setAllowCredentials(true);
        
        // Áp dụng cho tất cả các endpoint
        UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource();
        source.registerCorsConfiguration("/**", configuration);
        
        return source;
    }
}
